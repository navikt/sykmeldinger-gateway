name: Deploy app to prod
on: push

permissions:
  actions: read
  contents: write
  security-events: write
  packages: write
  id-token: write

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: kotlin

      - name: Build gradle artifacts
        run: |
          ./gradlew shadowJar -x test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.READER_TOKEN }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
    steps:
      - uses: navikt/teamsykmelding-github-actions-workflows/actions/gradle-cached-21@main
      - run: ./gradlew test
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.READER_TOKEN }}

  build:
    if: github.actor != 'dependabot[bot]'
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: "write"
      contents: "write"
      id-token: "write"
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: navikt/teamsykmelding-github-actions-workflows/actions/gradle-cached-21@main
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Build jar
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          ./gradlew shadowJar -x test
      - name: Generate and output SBOM
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
        uses: gradle/gradle-build-action@v3.5.0
        with:
          dependency-graph: generate-and-submit
          arguments: build
      - name: Push docker image to GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: tsm
          salsa: true
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-prod:
    if: github.ref_name == 'main'
    name: Deploy to prod
    runs-on: ubuntu-latest
    needs: [ test, build ]
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais/nais-prod.yaml
          VAR: image=${{ needs.build.outputs.image }},commit=${{ github.sha }},sourceVersionURL=https://github.com/${{ github.repository }}/tree/${{ github.sha }}